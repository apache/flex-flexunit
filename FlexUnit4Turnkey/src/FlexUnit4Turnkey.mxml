<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<mx:Application xmlns:mx="library://ns.adobe.com/flex/mx"
								xmlns:fx="http://ns.adobe.com/mxml/2009"
								xmlns:flexUnitUIRunner="http://www.adobe.com/2009/flexUnitUIRunner"
								creationComplete="runMe()"
								styleName="flexUnitApplication" >
	
	<fx:Script>
		<![CDATA[
			import flexUnitTests.flexUnit1.framework.AllFrameworkTests;
			import flexUnitTests.flexUnit4.suites.frameworkSuite.FlexUnit4Suite;
			
			import org.flexunit.assertThat;
			import org.flexunit.asserts.*;
			import org.flexunit.listeners.UIListener;
			import org.flexunit.runner.FlexUnitCore;
			import org.flexunit.runner.Request;
			import org.flexunit.runner.notification.async.XMLListener;
			import org.hamcrest.HamcrestSuite;
			
			import suite.FlexUnitIn360;
			import suite.cases.BasicMathTest;
			private var core:FlexUnitCore;

			public function runMe():void {

				core = new FlexUnitCore();

/* 				assertEquals( 1, 2 ); 
 */				//Listeners for CI systems or Flash Builder Plugins 
				//core.addListener( new CIListener());
				//core.addListener( new XMLListener( "FlexUnit4Test" ) );

				//Listener for outputting to the trace console via the Flex logging class, Flex Only
				//core.addListener( TextListener.getDefaultTextListener( LogEventLevel.DEBUG ) );

				//Listener for outputting to the trace console via the trace method, ActionScript or Flex
				//core.addListener( new TraceListener() );

				//Listener for the UI
				core.addListener( new UIListener( uiListener ));
				
				//This run statements executes the unit tests for the FlexUnit4 framework 
				//the Hamcrest matchers and some of the tests shown in the FlexUnit in 360 seconds blog post
				core.run( FlexUnit4Suite, HamcrestSuite, FlexUnitIn360 );
				
				//If you are interested, the original FlexUnit1 unit tests are available in
				//a suite named AllFrameworkTests. Just add this one to the list in core.run()
				//to see it execute as well

				//The run method can take a single class or suite
				//core.run( FrameworkSuite ); or core.run( TestAssert );

				//It can take a request, which allows you to selected specific tests
				//core.run( Request.method( TestTwo, "testTwo3" ) );
				
				//It can take a comma separated list of the previous choices
				//core.run( FrameworkSuite, TestAssert, Request.method( TestAssert, "testFail" ) );
				
				//It can take an array
				//var ar:Array = new Array();
				//ar.push( Request.method( TestAssert, "testFail" ) );
				//ar.push( FrameworkSuite );
				//core.run( ar );

				//Or a combination of any of the above
				//var ar:Array = new Array();
				//ar.push( Request.method( TestAssert, "testFail" ) );
				//ar.push( FrameworkSuite );
				//core.run( FrameworkSuite, ar, TestAssert  );

				//The only really important thing is that you pass them all at once. You don't want to call core.run() more than once at this time
			}
		]]>
	</fx:Script>
	<fx:Style>
		Application {
			   backgroundColor: #3872b2;
			   backgroundGradientColors: #3872b2, #0c1a3d;
			   backgroundGradientAlphas: 1, 1;
			   themeColor: #ffffff;
			   color: #444444;
			   fontFamily: "Myriad Pro Semibold";
			   fontSize: 12;
			}
	</fx:Style>
	
	<flexUnitUIRunner:TestRunnerBase id="uiListener" 
		width="100%" height="100%" />	
</mx:Application>
